

function TLexer.parse() : integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)
begin
  (* actions: *)
  case yyruleno of
  1:
 			return(_BLANK);
  2:
      		return(_LETTER);
  3:
    		return(_TERM);
  4:
     		return(_NTERM);
  5:
     		return(_START);
  6:
    		return(_VOID);
  7:
    		return(_BOOL);
  8:
     		return(_FALSE);
  9:
    		return(_TRUE);
  10:
      		return(_RETURN);
  11:
      		return(_ACCEPT);
  12:
     		return(_PRINT);
  13:
    		return(_EXIT);	
  14:
    		return(_ELSE);			
  15:
  			return(_IF);
  16:
   			return(_TRY);
  17:
   			return(_ALL);
  18:
     		return(_WHILE);		
  19:
    		return(_GOTO);	
  20:
    		return(_OR);
  21:
   			return(_FORK);
  22:
  			return(_AND);	
  23:
 			return(_NOT);	
  24:
  			return(_EQUAL);
  25:
   			return(_EPSILON);
  26:
     		return(_RIGHT);
  27:
    		return(_LEFT);
  28:
     		return(_STAND);
  29:
     		return(_INPUT);
  30:
     		return(_STATE);
  31:
         	return(_PRAGMA);
  32:
      		return(_TURING);
  33:
       		return(_GRAMMAR);
  34:
        	return(_PGRAMMAR);
  35:
        	return(_PUSHDOWN);
  36:
         	return(_EPUSHDOWN);
  37:
           	return(_LINDENMAYER);
  38:
    		return(_RULE);
  39:
        	return(_POSITION);
  40:
      		return(_RANDOM);
  41:
    		return(_HIDE);
  42:
    		return(_SHOW);
  43:
      		return(_DETERM);
  44:
       		return(_DEADEND);
  45:
    		return(_LIST);
  46:
    		return(_TREE);
  47:
    		return(_LANG);
  48:
        	return(_LEFTMOST);
  49:
         	return(_RIGHTMOST);
  50:
     		return(_PRINT);
  51:
         	return(_PRINTMODE);
  52:
     		return(_COLOR);
  53:
   			return(_STAR);
  54:
    		return(_NEXT);
  55:
   			return(_END);
  56:
    		return(_SOME);
  57:
   			return(_MINUS);
  58:
   			return(_AND2);

  59:
          				begin
							yylval.yyShortString := yytext;
							return(IDENT);
						end;

  60:
                        begin
							yylval.yyInteger := StrToInt(yytext);
							return(NUMBER);
						end;

  61:
         				begin
							yylval.yyShortString := ExtractFileName(copy(yytext, 2, length(yytext) - 2));
							return(_STRING);
						end;
						
						
  62:
                        ;
  63:
                                       		;

  64:
                        begin 
							{ FErrorMsg := 'Lexikális hiba: ' + yytext + ' sor: ' + IntToStr(yylineno);} 
							returnc(yytext[1]); 
						end;
  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 295;
yynmatches = 295;
yyntrans   = 461;
yynstates  = 228;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  59,
  { 1: }
  59,
  { 2: }
  1,
  64,
  { 3: }
  59,
  64,
  { 4: }
  59,
  64,
  { 5: }
  59,
  64,
  { 6: }
  59,
  64,
  { 7: }
  59,
  64,
  { 8: }
  59,
  64,
  { 9: }
  59,
  64,
  { 10: }
  59,
  64,
  { 11: }
  59,
  64,
  { 12: }
  59,
  64,
  { 13: }
  59,
  64,
  { 14: }
  59,
  64,
  { 15: }
  59,
  64,
  { 16: }
  59,
  64,
  { 17: }
  21,
  64,
  { 18: }
  58,
  64,
  { 19: }
  23,
  64,
  { 20: }
  64,
  { 21: }
  64,
  { 22: }
  59,
  64,
  { 23: }
  59,
  64,
  { 24: }
  59,
  64,
  { 25: }
  53,
  64,
  { 26: }
  55,
  64,
  { 27: }
  57,
  64,
  { 28: }
  59,
  64,
  { 29: }
  59,
  60,
  64,
  { 30: }
  64,
  { 31: }
  62,
  { 32: }
  64,
  { 33: }
  62,
  64,
  { 34: }
  64,
  { 35: }
  59,
  { 36: }
  59,
  { 37: }
  59,
  { 38: }
  59,
  { 39: }
  59,
  { 40: }
  59,
  { 41: }
  59,
  { 42: }
  59,
  { 43: }
  59,
  { 44: }
  59,
  { 45: }
  59,
  { 46: }
  59,
  { 47: }
  59,
  { 48: }
  59,
  { 49: }
  59,
  { 50: }
  59,
  { 51: }
  59,
  { 52: }
  59,
  { 53: }
  59,
  { 54: }
  59,
  { 55: }
  59,
  { 56: }
  59,
  { 57: }
  59,
  { 58: }
  59,
  { 59: }
  59,
  { 60: }
  59,
  { 61: }
  59,
  { 62: }
  15,
  59,
  { 63: }
  59,
  { 64: }
  59,
  { 65: }
  59,
  { 66: }
  59,
  { 67: }
  20,
  { 68: }
  22,
  { 69: }
  24,
  { 70: }
  { 71: }
  59,
  { 72: }
  59,
  { 73: }
  59,
  { 74: }
  54,
  { 75: }
  59,
  60,
  { 76: }
  { 77: }
  61,
  { 78: }
  63,
  { 79: }
  { 80: }
  59,
  { 81: }
  59,
  { 82: }
  59,
  { 83: }
  59,
  { 84: }
  59,
  { 85: }
  59,
  { 86: }
  59,
  { 87: }
  16,
  59,
  { 88: }
  59,
  { 89: }
  59,
  { 90: }
  59,
  { 91: }
  59,
  { 92: }
  59,
  { 93: }
  59,
  { 94: }
  59,
  { 95: }
  59,
  { 96: }
  59,
  { 97: }
  59,
  { 98: }
  59,
  { 99: }
  59,
  { 100: }
  59,
  { 101: }
  59,
  { 102: }
  17,
  59,
  { 103: }
  59,
  { 104: }
  59,
  { 105: }
  59,
  { 106: }
  59,
  { 107: }
  59,
  { 108: }
  59,
  { 109: }
  25,
  59,
  { 110: }
  59,
  { 111: }
  59,
  { 112: }
  59,
  { 113: }
  59,
  { 114: }
  59,
  { 115: }
  { 116: }
  59,
  { 117: }
  59,
  { 118: }
  59,
  { 119: }
  59,
  { 120: }
  { 121: }
  59,
  { 122: }
  27,
  59,
  { 123: }
  59,
  { 124: }
  45,
  59,
  { 125: }
  47,
  59,
  { 126: }
  3,
  59,
  { 127: }
  9,
  59,
  { 128: }
  46,
  59,
  { 129: }
  59,
  { 130: }
  59,
  { 131: }
  59,
  { 132: }
  59,
  { 133: }
  59,
  { 134: }
  42,
  59,
  { 135: }
  56,
  59,
  { 136: }
  6,
  59,
  { 137: }
  7,
  59,
  { 138: }
  59,
  { 139: }
  59,
  { 140: }
  59,
  { 141: }
  38,
  59,
  { 142: }
  59,
  { 143: }
  59,
  { 144: }
  59,
  { 145: }
  59,
  { 146: }
  59,
  { 147: }
  59,
  { 148: }
  13,
  59,
  { 149: }
  14,
  59,
  { 150: }
  59,
  { 151: }
  59,
  { 152: }
  59,
  { 153: }
  19,
  59,
  { 154: }
  59,
  { 155: }
  { 156: }
  41,
  59,
  { 157: }
  59,
  { 158: }
  59,
  { 159: }
  59,
  { 160: }
  63,
  { 161: }
  59,
  { 162: }
  59,
  { 163: }
  59,
  { 164: }
  59,
  { 165: }
  4,
  59,
  { 166: }
  5,
  59,
  { 167: }
  28,
  59,
  { 168: }
  30,
  59,
  { 169: }
  8,
  59,
  { 170: }
  59,
  { 171: }
  26,
  59,
  { 172: }
  59,
  { 173: }
  59,
  { 174: }
  12,
  50,
  59,
  { 175: }
  59,
  { 176: }
  59,
  { 177: }
  59,
  { 178: }
  59,
  { 179: }
  29,
  59,
  { 180: }
  18,
  59,
  { 181: }
  59,
  { 182: }
  { 183: }
  59,
  { 184: }
  59,
  { 185: }
  52,
  59,
  { 186: }
  2,
  59,
  { 187: }
  59,
  { 188: }
  59,
  { 189: }
  32,
  59,
  { 190: }
  10,
  59,
  { 191: }
  59,
  { 192: }
  40,
  59,
  { 193: }
  11,
  59,
  { 194: }
  59,
  { 195: }
  59,
  { 196: }
  59,
  { 197: }
  59,
  { 198: }
  59,
  { 199: }
  59,
  { 200: }
  { 201: }
  43,
  59,
  { 202: }
  59,
  { 203: }
  59,
  { 204: }
  59,
  { 205: }
  59,
  { 206: }
  59,
  { 207: }
  59,
  { 208: }
  59,
  { 209: }
  59,
  { 210: }
  59,
  { 211: }
  33,
  59,
  { 212: }
  31,
  { 213: }
  44,
  59,
  { 214: }
  48,
  59,
  { 215: }
  59,
  { 216: }
  59,
  { 217: }
  59,
  { 218: }
  34,
  59,
  { 219: }
  35,
  59,
  { 220: }
  39,
  59,
  { 221: }
  59,
  { 222: }
  59,
  { 223: }
  49,
  59,
  { 224: }
  51,
  59,
  { 225: }
  36,
  59,
  { 226: }
  59,
  { 227: }
  37,
  59
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
  59,
{ 1: }
  59,
{ 2: }
  1,
  64,
{ 3: }
  59,
  64,
{ 4: }
  59,
  64,
{ 5: }
  59,
  64,
{ 6: }
  59,
  64,
{ 7: }
  59,
  64,
{ 8: }
  59,
  64,
{ 9: }
  59,
  64,
{ 10: }
  59,
  64,
{ 11: }
  59,
  64,
{ 12: }
  59,
  64,
{ 13: }
  59,
  64,
{ 14: }
  59,
  64,
{ 15: }
  59,
  64,
{ 16: }
  59,
  64,
{ 17: }
  21,
  64,
{ 18: }
  58,
  64,
{ 19: }
  23,
  64,
{ 20: }
  64,
{ 21: }
  64,
{ 22: }
  59,
  64,
{ 23: }
  59,
  64,
{ 24: }
  59,
  64,
{ 25: }
  53,
  64,
{ 26: }
  55,
  64,
{ 27: }
  57,
  64,
{ 28: }
  59,
  64,
{ 29: }
  59,
  60,
  64,
{ 30: }
  64,
{ 31: }
  62,
{ 32: }
  64,
{ 33: }
  62,
  64,
{ 34: }
  64,
{ 35: }
  59,
{ 36: }
  59,
{ 37: }
  59,
{ 38: }
  59,
{ 39: }
  59,
{ 40: }
  59,
{ 41: }
  59,
{ 42: }
  59,
{ 43: }
  59,
{ 44: }
  59,
{ 45: }
  59,
{ 46: }
  59,
{ 47: }
  59,
{ 48: }
  59,
{ 49: }
  59,
{ 50: }
  59,
{ 51: }
  59,
{ 52: }
  59,
{ 53: }
  59,
{ 54: }
  59,
{ 55: }
  59,
{ 56: }
  59,
{ 57: }
  59,
{ 58: }
  59,
{ 59: }
  59,
{ 60: }
  59,
{ 61: }
  59,
{ 62: }
  15,
  59,
{ 63: }
  59,
{ 64: }
  59,
{ 65: }
  59,
{ 66: }
  59,
{ 67: }
  20,
{ 68: }
  22,
{ 69: }
  24,
{ 70: }
{ 71: }
  59,
{ 72: }
  59,
{ 73: }
  59,
{ 74: }
  54,
{ 75: }
  59,
  60,
{ 76: }
{ 77: }
  61,
{ 78: }
  63,
{ 79: }
{ 80: }
  59,
{ 81: }
  59,
{ 82: }
  59,
{ 83: }
  59,
{ 84: }
  59,
{ 85: }
  59,
{ 86: }
  59,
{ 87: }
  16,
  59,
{ 88: }
  59,
{ 89: }
  59,
{ 90: }
  59,
{ 91: }
  59,
{ 92: }
  59,
{ 93: }
  59,
{ 94: }
  59,
{ 95: }
  59,
{ 96: }
  59,
{ 97: }
  59,
{ 98: }
  59,
{ 99: }
  59,
{ 100: }
  59,
{ 101: }
  59,
{ 102: }
  17,
  59,
{ 103: }
  59,
{ 104: }
  59,
{ 105: }
  59,
{ 106: }
  59,
{ 107: }
  59,
{ 108: }
  59,
{ 109: }
  25,
  59,
{ 110: }
  59,
{ 111: }
  59,
{ 112: }
  59,
{ 113: }
  59,
{ 114: }
  59,
{ 115: }
{ 116: }
  59,
{ 117: }
  59,
{ 118: }
  59,
{ 119: }
  59,
{ 120: }
{ 121: }
  59,
{ 122: }
  27,
  59,
{ 123: }
  59,
{ 124: }
  45,
  59,
{ 125: }
  47,
  59,
{ 126: }
  3,
  59,
{ 127: }
  9,
  59,
{ 128: }
  46,
  59,
{ 129: }
  59,
{ 130: }
  59,
{ 131: }
  59,
{ 132: }
  59,
{ 133: }
  59,
{ 134: }
  42,
  59,
{ 135: }
  56,
  59,
{ 136: }
  6,
  59,
{ 137: }
  7,
  59,
{ 138: }
  59,
{ 139: }
  59,
{ 140: }
  59,
{ 141: }
  38,
  59,
{ 142: }
  59,
{ 143: }
  59,
{ 144: }
  59,
{ 145: }
  59,
{ 146: }
  59,
{ 147: }
  59,
{ 148: }
  13,
  59,
{ 149: }
  14,
  59,
{ 150: }
  59,
{ 151: }
  59,
{ 152: }
  59,
{ 153: }
  19,
  59,
{ 154: }
  59,
{ 155: }
{ 156: }
  41,
  59,
{ 157: }
  59,
{ 158: }
  59,
{ 159: }
  59,
{ 160: }
  63,
{ 161: }
  59,
{ 162: }
  59,
{ 163: }
  59,
{ 164: }
  59,
{ 165: }
  4,
  59,
{ 166: }
  5,
  59,
{ 167: }
  28,
  59,
{ 168: }
  30,
  59,
{ 169: }
  8,
  59,
{ 170: }
  59,
{ 171: }
  26,
  59,
{ 172: }
  59,
{ 173: }
  59,
{ 174: }
  12,
  50,
  59,
{ 175: }
  59,
{ 176: }
  59,
{ 177: }
  59,
{ 178: }
  59,
{ 179: }
  29,
  59,
{ 180: }
  18,
  59,
{ 181: }
  59,
{ 182: }
{ 183: }
  59,
{ 184: }
  59,
{ 185: }
  52,
  59,
{ 186: }
  2,
  59,
{ 187: }
  59,
{ 188: }
  59,
{ 189: }
  32,
  59,
{ 190: }
  10,
  59,
{ 191: }
  59,
{ 192: }
  40,
  59,
{ 193: }
  11,
  59,
{ 194: }
  59,
{ 195: }
  59,
{ 196: }
  59,
{ 197: }
  59,
{ 198: }
  59,
{ 199: }
  59,
{ 200: }
{ 201: }
  43,
  59,
{ 202: }
  59,
{ 203: }
  59,
{ 204: }
  59,
{ 205: }
  59,
{ 206: }
  59,
{ 207: }
  59,
{ 208: }
  59,
{ 209: }
  59,
{ 210: }
  59,
{ 211: }
  33,
  59,
{ 212: }
  31,
{ 213: }
  44,
  59,
{ 214: }
  48,
  59,
{ 215: }
  59,
{ 216: }
  59,
{ 217: }
  59,
{ 218: }
  34,
  59,
{ 219: }
  35,
  59,
{ 220: }
  39,
  59,
{ 221: }
  59,
{ 222: }
  59,
{ 223: }
  49,
  59,
{ 224: }
  51,
  59,
{ 225: }
  36,
  59,
{ 226: }
  59,
{ 227: }
  37,
  59
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #1..#8,#11,#13..#31,'$','%',''''..')','+'..'-',
            ':','<','>'..'@','['..'^','`','{','}'..#255 ]; s: 34),
  ( cc: [ #9,#12,' ' ]; s: 33),
  ( cc: [ #10 ]; s: 31),
  ( cc: [ '!' ]; s: 19),
  ( cc: [ '"' ]; s: 30),
  ( cc: [ '#' ]; s: 21),
  ( cc: [ '&' ]; s: 18),
  ( cc: [ '*' ]; s: 25),
  ( cc: [ '.' ]; s: 27),
  ( cc: [ '/' ]; s: 32),
  ( cc: [ '0'..'9' ]; s: 29),
  ( cc: [ ';' ]; s: 26),
  ( cc: [ '=' ]; s: 20),
  ( cc: [ 'A'..'Z','j','k','m','o','q','u','x'..'z' ]; s: 28),
  ( cc: [ '_' ]; s: 2),
  ( cc: [ 'a' ]; s: 11),
  ( cc: [ 'b' ]; s: 8),
  ( cc: [ 'c' ]; s: 24),
  ( cc: [ 'd' ]; s: 23),
  ( cc: [ 'e' ]; s: 13),
  ( cc: [ 'f' ]; s: 9),
  ( cc: [ 'g' ]; s: 16),
  ( cc: [ 'h' ]; s: 22),
  ( cc: [ 'i' ]; s: 14),
  ( cc: [ 'l' ]; s: 3),
  ( cc: [ 'n' ]; s: 5),
  ( cc: [ 'p' ]; s: 12),
  ( cc: [ 'r' ]; s: 10),
  ( cc: [ 's' ]; s: 6),
  ( cc: [ 't' ]; s: 4),
  ( cc: [ 'v' ]; s: 7),
  ( cc: [ 'w' ]; s: 15),
  ( cc: [ '|' ]; s: 17),
{ 1: }
  ( cc: [ #1..#8,#11,#13..#31,'$','%',''''..')','+'..'-',
            ':','<','>'..'@','['..'^','`','{','}'..#255 ]; s: 34),
  ( cc: [ #9,#12,' ' ]; s: 33),
  ( cc: [ #10 ]; s: 31),
  ( cc: [ '!' ]; s: 19),
  ( cc: [ '"' ]; s: 30),
  ( cc: [ '#' ]; s: 21),
  ( cc: [ '&' ]; s: 18),
  ( cc: [ '*' ]; s: 25),
  ( cc: [ '.' ]; s: 27),
  ( cc: [ '/' ]; s: 32),
  ( cc: [ '0'..'9' ]; s: 29),
  ( cc: [ ';' ]; s: 26),
  ( cc: [ '=' ]; s: 20),
  ( cc: [ 'A'..'Z','j','k','m','o','q','u','x'..'z' ]; s: 28),
  ( cc: [ '_' ]; s: 2),
  ( cc: [ 'a' ]; s: 11),
  ( cc: [ 'b' ]; s: 8),
  ( cc: [ 'c' ]; s: 24),
  ( cc: [ 'd' ]; s: 23),
  ( cc: [ 'e' ]; s: 13),
  ( cc: [ 'f' ]; s: 9),
  ( cc: [ 'g' ]; s: 16),
  ( cc: [ 'h' ]; s: 22),
  ( cc: [ 'i' ]; s: 14),
  ( cc: [ 'l' ]; s: 3),
  ( cc: [ 'n' ]; s: 5),
  ( cc: [ 'p' ]; s: 12),
  ( cc: [ 'r' ]; s: 10),
  ( cc: [ 's' ]; s: 6),
  ( cc: [ 't' ]; s: 4),
  ( cc: [ 'v' ]; s: 7),
  ( cc: [ 'w' ]; s: 15),
  ( cc: [ '|' ]; s: 17),
{ 2: }
{ 3: }
  ( cc: [ '0'..'9','A'..'Z','b'..'d','f'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 37),
  ( cc: [ 'e' ]; s: 35),
  ( cc: [ 'i' ]; s: 36),
{ 4: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'q','s','t',
            'v'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 39),
  ( cc: [ 'r' ]; s: 40),
  ( cc: [ 'u' ]; s: 41),
{ 5: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 42),
{ 6: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'n','p'..'s',
            'u'..'z' ]; s: 38),
  ( cc: [ 'h' ]; s: 44),
  ( cc: [ 'o' ]; s: 45),
  ( cc: [ 't' ]; s: 43),
{ 7: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 46),
{ 8: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 47),
{ 9: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 48),
{ 10: }
  ( cc: [ '0'..'9','A'..'Z','b'..'d','f'..'h','j'..'t',
            'v'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 52),
  ( cc: [ 'e' ]; s: 49),
  ( cc: [ 'i' ]; s: 50),
  ( cc: [ 'u' ]; s: 51),
{ 11: }
  ( cc: [ '0'..'9','A'..'Z','a','b','d'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'c' ]; s: 53),
  ( cc: [ 'l' ]; s: 54),
{ 12: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'n','p','q',
            's','t','v'..'z' ]; s: 38),
  ( cc: [ 'g' ]; s: 56),
  ( cc: [ 'o' ]; s: 58),
  ( cc: [ 'r' ]; s: 55),
  ( cc: [ 'u' ]; s: 57),
{ 13: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'o','q'..'w',
            'y','z' ]; s: 38),
  ( cc: [ 'l' ]; s: 60),
  ( cc: [ 'p' ]; s: 61),
  ( cc: [ 'x' ]; s: 59),
{ 14: }
  ( cc: [ '0'..'9','A'..'Z','a'..'e','g'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'f' ]; s: 62),
  ( cc: [ 'n' ]; s: 63),
{ 15: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 38),
  ( cc: [ 'h' ]; s: 64),
{ 16: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p','q','s'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 65),
  ( cc: [ 'r' ]; s: 66),
{ 17: }
  ( cc: [ '|' ]; s: 67),
{ 18: }
  ( cc: [ '&' ]; s: 68),
{ 19: }
{ 20: }
  ( cc: [ '=' ]; s: 69),
{ 21: }
  ( cc: [ 'p' ]; s: 70),
{ 22: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 71),
{ 23: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 72),
{ 24: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 73),
{ 25: }
{ 26: }
  ( cc: [ ';' ]; s: 74),
{ 27: }
{ 28: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 29: }
  ( cc: [ '0'..'9' ]; s: 75),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 38),
{ 30: }
  ( cc: [ #1..'!','#'..#255 ]; s: 76),
  ( cc: [ '"' ]; s: 77),
{ 31: }
{ 32: }
  ( cc: [ '*' ]; s: 79),
  ( cc: [ '/' ]; s: 78),
{ 33: }
{ 34: }
{ 35: }
  ( cc: [ '0'..'9','A'..'Z','a'..'e','g'..'s','u'..'z' ]; s: 38),
  ( cc: [ 'f' ]; s: 81),
  ( cc: [ 't' ]; s: 80),
{ 36: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'r','t'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 82),
  ( cc: [ 's' ]; s: 83),
{ 37: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 84),
{ 38: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 39: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 85),
{ 40: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'t','v'..'x',
            'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 88),
  ( cc: [ 'u' ]; s: 86),
  ( cc: [ 'y' ]; s: 87),
{ 41: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 89),
{ 42: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 90),
{ 43: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 91),
{ 44: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 92),
{ 45: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 93),
{ 46: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 94),
{ 47: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 95),
{ 48: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 96),
{ 49: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 97),
{ 50: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 38),
  ( cc: [ 'g' ]; s: 98),
{ 51: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 99),
{ 52: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 100),
{ 53: }
  ( cc: [ '0'..'9','A'..'Z','a','b','d'..'z' ]; s: 38),
  ( cc: [ 'c' ]; s: 101),
{ 54: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 102),
{ 55: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 103),
{ 56: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 104),
{ 57: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 105),
{ 58: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 106),
{ 59: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 107),
{ 60: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 108),
{ 61: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t','v'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 109),
  ( cc: [ 'u' ]; s: 110),
{ 62: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 63: }
  ( cc: [ '0'..'9','A'..'Z','a'..'o','q'..'z' ]; s: 38),
  ( cc: [ 'p' ]; s: 111),
{ 64: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 112),
{ 65: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 113),
{ 66: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 114),
{ 67: }
{ 68: }
{ 69: }
{ 70: }
  ( cc: [ 'r' ]; s: 115),
{ 71: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 116),
{ 72: }
  ( cc: [ '0'..'9','A'..'Z','b'..'s','u'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 118),
  ( cc: [ 't' ]; s: 117),
{ 73: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 119),
{ 74: }
{ 75: }
  ( cc: [ '0'..'9' ]; s: 75),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 38),
{ 76: }
  ( cc: [ #1..'!','#'..#255 ]; s: 76),
  ( cc: [ '"' ]; s: 77),
{ 77: }
{ 78: }
  ( cc: [ #1..#9,#11..#255 ]; s: 78),
{ 79: }
  ( cc: [ #1..')','+'..#255 ]; s: 79),
  ( cc: [ '*' ]; s: 120),
{ 80: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 121),
{ 81: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 122),
{ 82: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 123),
{ 83: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 124),
{ 84: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 38),
  ( cc: [ 'g' ]; s: 125),
{ 85: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 126),
{ 86: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 127),
{ 87: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 88: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 128),
{ 89: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 129),
{ 90: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 130),
{ 91: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'q','s','u'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 132),
  ( cc: [ 'r' ]; s: 131),
  ( cc: [ 't' ]; s: 133),
{ 92: }
  ( cc: [ '0'..'9','A'..'Z','a'..'v','x'..'z' ]; s: 38),
  ( cc: [ 'w' ]; s: 134),
{ 93: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 135),
{ 94: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 136),
{ 95: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 137),
{ 96: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 138),
{ 97: }
  ( cc: [ '0'..'9','A'..'Z','a'..'t','v'..'z' ]; s: 38),
  ( cc: [ 'u' ]; s: 139),
{ 98: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 38),
  ( cc: [ 'h' ]; s: 140),
{ 99: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 141),
{ 100: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 142),
{ 101: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 143),
{ 102: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 103: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 144),
{ 104: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 145),
{ 105: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 38),
  ( cc: [ 'h' ]; s: 146),
{ 106: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 147),
{ 107: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 148),
{ 108: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 149),
{ 109: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 110: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 150),
{ 111: }
  ( cc: [ '0'..'9','A'..'Z','a'..'t','v'..'z' ]; s: 38),
  ( cc: [ 'u' ]; s: 151),
{ 112: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 38),
  ( cc: [ 'l' ]; s: 152),
{ 113: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 153),
{ 114: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 154),
{ 115: }
  ( cc: [ 'a' ]; s: 155),
{ 116: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 156),
{ 117: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 157),
{ 118: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 158),
{ 119: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 159),
{ 120: }
  ( cc: [ #1..')','+'..'.','0'..#255 ]; s: 79),
  ( cc: [ '*' ]; s: 120),
  ( cc: [ '/' ]; s: 160),
{ 121: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 161),
{ 122: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 162),
{ 123: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 163),
{ 124: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 125: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 126: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 127: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 128: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 129: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 164),
{ 130: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 165),
{ 131: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 166),
{ 132: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 167),
{ 133: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 168),
{ 134: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 135: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 136: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 137: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 138: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 169),
{ 139: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 170),
{ 140: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 171),
{ 141: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 142: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 172),
{ 143: }
  ( cc: [ '0'..'9','A'..'Z','a'..'o','q'..'z' ]; s: 38),
  ( cc: [ 'p' ]; s: 173),
{ 144: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 174),
{ 145: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 175),
{ 146: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 176),
{ 147: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 177),
{ 148: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 149: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 150: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 38),
  ( cc: [ 'h' ]; s: 178),
{ 151: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 179),
{ 152: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 180),
{ 153: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 154: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 181),
{ 155: }
  ( cc: [ 'g' ]; s: 182),
{ 156: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 157: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 183),
{ 158: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 184),
{ 159: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 185),
{ 160: }
{ 161: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 186),
{ 162: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 187),
{ 163: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 188),
{ 164: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 38),
  ( cc: [ 'g' ]; s: 189),
{ 165: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 166: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 167: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 168: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 169: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 170: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 190),
{ 171: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 191),
{ 172: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 192),
{ 173: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 193),
{ 174: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 194),
{ 175: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 195),
{ 176: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 196),
{ 177: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 38),
  ( cc: [ 'i' ]; s: 197),
{ 178: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 198),
{ 179: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 180: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 181: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 199),
{ 182: }
  ( cc: [ 'm' ]; s: 200),
{ 183: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 201),
{ 184: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 202),
{ 185: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 186: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 187: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 203),
{ 188: }
  ( cc: [ '0'..'9','A'..'Z','a'..'l','n'..'z' ]; s: 38),
  ( cc: [ 'm' ]; s: 204),
{ 189: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 190: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 191: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 205),
{ 192: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 193: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 194: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 206),
{ 195: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 207),
{ 196: }
  ( cc: [ '0'..'9','A'..'Z','a'..'v','x'..'z' ]; s: 38),
  ( cc: [ 'w' ]; s: 208),
{ 197: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 209),
{ 198: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 38),
  ( cc: [ 'o' ]; s: 210),
{ 199: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 211),
{ 200: }
  ( cc: [ 'a' ]; s: 212),
{ 201: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 202: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 213),
{ 203: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 214),
{ 204: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 38),
  ( cc: [ 'a' ]; s: 215),
{ 205: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 38),
  ( cc: [ 's' ]; s: 216),
{ 206: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 38),
  ( cc: [ 'd' ]; s: 217),
{ 207: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 218),
{ 208: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 219),
{ 209: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 220),
{ 210: }
  ( cc: [ '0'..'9','A'..'Z','a'..'v','x'..'z' ]; s: 38),
  ( cc: [ 'w' ]; s: 221),
{ 211: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 212: }
{ 213: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 214: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 215: }
  ( cc: [ '0'..'9','A'..'Z','a'..'x','z' ]; s: 38),
  ( cc: [ 'y' ]; s: 222),
{ 216: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 38),
  ( cc: [ 't' ]; s: 223),
{ 217: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 224),
{ 218: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 219: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 220: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 221: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 38),
  ( cc: [ 'n' ]; s: 225),
{ 222: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 38),
  ( cc: [ 'e' ]; s: 226),
{ 223: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 224: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 225: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38),
{ 226: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 38),
  ( cc: [ 'r' ]; s: 227),
{ 227: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 38)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 2,
{ 2: } 3,
{ 3: } 5,
{ 4: } 7,
{ 5: } 9,
{ 6: } 11,
{ 7: } 13,
{ 8: } 15,
{ 9: } 17,
{ 10: } 19,
{ 11: } 21,
{ 12: } 23,
{ 13: } 25,
{ 14: } 27,
{ 15: } 29,
{ 16: } 31,
{ 17: } 33,
{ 18: } 35,
{ 19: } 37,
{ 20: } 39,
{ 21: } 40,
{ 22: } 41,
{ 23: } 43,
{ 24: } 45,
{ 25: } 47,
{ 26: } 49,
{ 27: } 51,
{ 28: } 53,
{ 29: } 55,
{ 30: } 58,
{ 31: } 59,
{ 32: } 60,
{ 33: } 61,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 73,
{ 45: } 74,
{ 46: } 75,
{ 47: } 76,
{ 48: } 77,
{ 49: } 78,
{ 50: } 79,
{ 51: } 80,
{ 52: } 81,
{ 53: } 82,
{ 54: } 83,
{ 55: } 84,
{ 56: } 85,
{ 57: } 86,
{ 58: } 87,
{ 59: } 88,
{ 60: } 89,
{ 61: } 90,
{ 62: } 91,
{ 63: } 93,
{ 64: } 94,
{ 65: } 95,
{ 66: } 96,
{ 67: } 97,
{ 68: } 98,
{ 69: } 99,
{ 70: } 100,
{ 71: } 100,
{ 72: } 101,
{ 73: } 102,
{ 74: } 103,
{ 75: } 104,
{ 76: } 106,
{ 77: } 106,
{ 78: } 107,
{ 79: } 108,
{ 80: } 108,
{ 81: } 109,
{ 82: } 110,
{ 83: } 111,
{ 84: } 112,
{ 85: } 113,
{ 86: } 114,
{ 87: } 115,
{ 88: } 117,
{ 89: } 118,
{ 90: } 119,
{ 91: } 120,
{ 92: } 121,
{ 93: } 122,
{ 94: } 123,
{ 95: } 124,
{ 96: } 125,
{ 97: } 126,
{ 98: } 127,
{ 99: } 128,
{ 100: } 129,
{ 101: } 130,
{ 102: } 131,
{ 103: } 133,
{ 104: } 134,
{ 105: } 135,
{ 106: } 136,
{ 107: } 137,
{ 108: } 138,
{ 109: } 139,
{ 110: } 141,
{ 111: } 142,
{ 112: } 143,
{ 113: } 144,
{ 114: } 145,
{ 115: } 146,
{ 116: } 146,
{ 117: } 147,
{ 118: } 148,
{ 119: } 149,
{ 120: } 150,
{ 121: } 150,
{ 122: } 151,
{ 123: } 153,
{ 124: } 154,
{ 125: } 156,
{ 126: } 158,
{ 127: } 160,
{ 128: } 162,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 171,
{ 136: } 173,
{ 137: } 175,
{ 138: } 177,
{ 139: } 178,
{ 140: } 179,
{ 141: } 180,
{ 142: } 182,
{ 143: } 183,
{ 144: } 184,
{ 145: } 185,
{ 146: } 186,
{ 147: } 187,
{ 148: } 188,
{ 149: } 190,
{ 150: } 192,
{ 151: } 193,
{ 152: } 194,
{ 153: } 195,
{ 154: } 197,
{ 155: } 198,
{ 156: } 198,
{ 157: } 200,
{ 158: } 201,
{ 159: } 202,
{ 160: } 203,
{ 161: } 204,
{ 162: } 205,
{ 163: } 206,
{ 164: } 207,
{ 165: } 208,
{ 166: } 210,
{ 167: } 212,
{ 168: } 214,
{ 169: } 216,
{ 170: } 218,
{ 171: } 219,
{ 172: } 221,
{ 173: } 222,
{ 174: } 223,
{ 175: } 226,
{ 176: } 227,
{ 177: } 228,
{ 178: } 229,
{ 179: } 230,
{ 180: } 232,
{ 181: } 234,
{ 182: } 235,
{ 183: } 235,
{ 184: } 236,
{ 185: } 237,
{ 186: } 239,
{ 187: } 241,
{ 188: } 242,
{ 189: } 243,
{ 190: } 245,
{ 191: } 247,
{ 192: } 248,
{ 193: } 250,
{ 194: } 252,
{ 195: } 253,
{ 196: } 254,
{ 197: } 255,
{ 198: } 256,
{ 199: } 257,
{ 200: } 258,
{ 201: } 258,
{ 202: } 260,
{ 203: } 261,
{ 204: } 262,
{ 205: } 263,
{ 206: } 264,
{ 207: } 265,
{ 208: } 266,
{ 209: } 267,
{ 210: } 268,
{ 211: } 269,
{ 212: } 271,
{ 213: } 272,
{ 214: } 274,
{ 215: } 276,
{ 216: } 277,
{ 217: } 278,
{ 218: } 279,
{ 219: } 281,
{ 220: } 283,
{ 221: } 285,
{ 222: } 286,
{ 223: } 287,
{ 224: } 289,
{ 225: } 291,
{ 226: } 293,
{ 227: } 294
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 2,
{ 2: } 4,
{ 3: } 6,
{ 4: } 8,
{ 5: } 10,
{ 6: } 12,
{ 7: } 14,
{ 8: } 16,
{ 9: } 18,
{ 10: } 20,
{ 11: } 22,
{ 12: } 24,
{ 13: } 26,
{ 14: } 28,
{ 15: } 30,
{ 16: } 32,
{ 17: } 34,
{ 18: } 36,
{ 19: } 38,
{ 20: } 39,
{ 21: } 40,
{ 22: } 42,
{ 23: } 44,
{ 24: } 46,
{ 25: } 48,
{ 26: } 50,
{ 27: } 52,
{ 28: } 54,
{ 29: } 57,
{ 30: } 58,
{ 31: } 59,
{ 32: } 60,
{ 33: } 62,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 73,
{ 45: } 74,
{ 46: } 75,
{ 47: } 76,
{ 48: } 77,
{ 49: } 78,
{ 50: } 79,
{ 51: } 80,
{ 52: } 81,
{ 53: } 82,
{ 54: } 83,
{ 55: } 84,
{ 56: } 85,
{ 57: } 86,
{ 58: } 87,
{ 59: } 88,
{ 60: } 89,
{ 61: } 90,
{ 62: } 92,
{ 63: } 93,
{ 64: } 94,
{ 65: } 95,
{ 66: } 96,
{ 67: } 97,
{ 68: } 98,
{ 69: } 99,
{ 70: } 99,
{ 71: } 100,
{ 72: } 101,
{ 73: } 102,
{ 74: } 103,
{ 75: } 105,
{ 76: } 105,
{ 77: } 106,
{ 78: } 107,
{ 79: } 107,
{ 80: } 108,
{ 81: } 109,
{ 82: } 110,
{ 83: } 111,
{ 84: } 112,
{ 85: } 113,
{ 86: } 114,
{ 87: } 116,
{ 88: } 117,
{ 89: } 118,
{ 90: } 119,
{ 91: } 120,
{ 92: } 121,
{ 93: } 122,
{ 94: } 123,
{ 95: } 124,
{ 96: } 125,
{ 97: } 126,
{ 98: } 127,
{ 99: } 128,
{ 100: } 129,
{ 101: } 130,
{ 102: } 132,
{ 103: } 133,
{ 104: } 134,
{ 105: } 135,
{ 106: } 136,
{ 107: } 137,
{ 108: } 138,
{ 109: } 140,
{ 110: } 141,
{ 111: } 142,
{ 112: } 143,
{ 113: } 144,
{ 114: } 145,
{ 115: } 145,
{ 116: } 146,
{ 117: } 147,
{ 118: } 148,
{ 119: } 149,
{ 120: } 149,
{ 121: } 150,
{ 122: } 152,
{ 123: } 153,
{ 124: } 155,
{ 125: } 157,
{ 126: } 159,
{ 127: } 161,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 170,
{ 135: } 172,
{ 136: } 174,
{ 137: } 176,
{ 138: } 177,
{ 139: } 178,
{ 140: } 179,
{ 141: } 181,
{ 142: } 182,
{ 143: } 183,
{ 144: } 184,
{ 145: } 185,
{ 146: } 186,
{ 147: } 187,
{ 148: } 189,
{ 149: } 191,
{ 150: } 192,
{ 151: } 193,
{ 152: } 194,
{ 153: } 196,
{ 154: } 197,
{ 155: } 197,
{ 156: } 199,
{ 157: } 200,
{ 158: } 201,
{ 159: } 202,
{ 160: } 203,
{ 161: } 204,
{ 162: } 205,
{ 163: } 206,
{ 164: } 207,
{ 165: } 209,
{ 166: } 211,
{ 167: } 213,
{ 168: } 215,
{ 169: } 217,
{ 170: } 218,
{ 171: } 220,
{ 172: } 221,
{ 173: } 222,
{ 174: } 225,
{ 175: } 226,
{ 176: } 227,
{ 177: } 228,
{ 178: } 229,
{ 179: } 231,
{ 180: } 233,
{ 181: } 234,
{ 182: } 234,
{ 183: } 235,
{ 184: } 236,
{ 185: } 238,
{ 186: } 240,
{ 187: } 241,
{ 188: } 242,
{ 189: } 244,
{ 190: } 246,
{ 191: } 247,
{ 192: } 249,
{ 193: } 251,
{ 194: } 252,
{ 195: } 253,
{ 196: } 254,
{ 197: } 255,
{ 198: } 256,
{ 199: } 257,
{ 200: } 257,
{ 201: } 259,
{ 202: } 260,
{ 203: } 261,
{ 204: } 262,
{ 205: } 263,
{ 206: } 264,
{ 207: } 265,
{ 208: } 266,
{ 209: } 267,
{ 210: } 268,
{ 211: } 270,
{ 212: } 271,
{ 213: } 273,
{ 214: } 275,
{ 215: } 276,
{ 216: } 277,
{ 217: } 278,
{ 218: } 280,
{ 219: } 282,
{ 220: } 284,
{ 221: } 285,
{ 222: } 286,
{ 223: } 288,
{ 224: } 290,
{ 225: } 292,
{ 226: } 293,
{ 227: } 295
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 2,
{ 2: } 3,
{ 3: } 5,
{ 4: } 7,
{ 5: } 9,
{ 6: } 11,
{ 7: } 13,
{ 8: } 15,
{ 9: } 17,
{ 10: } 19,
{ 11: } 21,
{ 12: } 23,
{ 13: } 25,
{ 14: } 27,
{ 15: } 29,
{ 16: } 31,
{ 17: } 33,
{ 18: } 35,
{ 19: } 37,
{ 20: } 39,
{ 21: } 40,
{ 22: } 41,
{ 23: } 43,
{ 24: } 45,
{ 25: } 47,
{ 26: } 49,
{ 27: } 51,
{ 28: } 53,
{ 29: } 55,
{ 30: } 58,
{ 31: } 59,
{ 32: } 60,
{ 33: } 61,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 73,
{ 45: } 74,
{ 46: } 75,
{ 47: } 76,
{ 48: } 77,
{ 49: } 78,
{ 50: } 79,
{ 51: } 80,
{ 52: } 81,
{ 53: } 82,
{ 54: } 83,
{ 55: } 84,
{ 56: } 85,
{ 57: } 86,
{ 58: } 87,
{ 59: } 88,
{ 60: } 89,
{ 61: } 90,
{ 62: } 91,
{ 63: } 93,
{ 64: } 94,
{ 65: } 95,
{ 66: } 96,
{ 67: } 97,
{ 68: } 98,
{ 69: } 99,
{ 70: } 100,
{ 71: } 100,
{ 72: } 101,
{ 73: } 102,
{ 74: } 103,
{ 75: } 104,
{ 76: } 106,
{ 77: } 106,
{ 78: } 107,
{ 79: } 108,
{ 80: } 108,
{ 81: } 109,
{ 82: } 110,
{ 83: } 111,
{ 84: } 112,
{ 85: } 113,
{ 86: } 114,
{ 87: } 115,
{ 88: } 117,
{ 89: } 118,
{ 90: } 119,
{ 91: } 120,
{ 92: } 121,
{ 93: } 122,
{ 94: } 123,
{ 95: } 124,
{ 96: } 125,
{ 97: } 126,
{ 98: } 127,
{ 99: } 128,
{ 100: } 129,
{ 101: } 130,
{ 102: } 131,
{ 103: } 133,
{ 104: } 134,
{ 105: } 135,
{ 106: } 136,
{ 107: } 137,
{ 108: } 138,
{ 109: } 139,
{ 110: } 141,
{ 111: } 142,
{ 112: } 143,
{ 113: } 144,
{ 114: } 145,
{ 115: } 146,
{ 116: } 146,
{ 117: } 147,
{ 118: } 148,
{ 119: } 149,
{ 120: } 150,
{ 121: } 150,
{ 122: } 151,
{ 123: } 153,
{ 124: } 154,
{ 125: } 156,
{ 126: } 158,
{ 127: } 160,
{ 128: } 162,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 171,
{ 136: } 173,
{ 137: } 175,
{ 138: } 177,
{ 139: } 178,
{ 140: } 179,
{ 141: } 180,
{ 142: } 182,
{ 143: } 183,
{ 144: } 184,
{ 145: } 185,
{ 146: } 186,
{ 147: } 187,
{ 148: } 188,
{ 149: } 190,
{ 150: } 192,
{ 151: } 193,
{ 152: } 194,
{ 153: } 195,
{ 154: } 197,
{ 155: } 198,
{ 156: } 198,
{ 157: } 200,
{ 158: } 201,
{ 159: } 202,
{ 160: } 203,
{ 161: } 204,
{ 162: } 205,
{ 163: } 206,
{ 164: } 207,
{ 165: } 208,
{ 166: } 210,
{ 167: } 212,
{ 168: } 214,
{ 169: } 216,
{ 170: } 218,
{ 171: } 219,
{ 172: } 221,
{ 173: } 222,
{ 174: } 223,
{ 175: } 226,
{ 176: } 227,
{ 177: } 228,
{ 178: } 229,
{ 179: } 230,
{ 180: } 232,
{ 181: } 234,
{ 182: } 235,
{ 183: } 235,
{ 184: } 236,
{ 185: } 237,
{ 186: } 239,
{ 187: } 241,
{ 188: } 242,
{ 189: } 243,
{ 190: } 245,
{ 191: } 247,
{ 192: } 248,
{ 193: } 250,
{ 194: } 252,
{ 195: } 253,
{ 196: } 254,
{ 197: } 255,
{ 198: } 256,
{ 199: } 257,
{ 200: } 258,
{ 201: } 258,
{ 202: } 260,
{ 203: } 261,
{ 204: } 262,
{ 205: } 263,
{ 206: } 264,
{ 207: } 265,
{ 208: } 266,
{ 209: } 267,
{ 210: } 268,
{ 211: } 269,
{ 212: } 271,
{ 213: } 272,
{ 214: } 274,
{ 215: } 276,
{ 216: } 277,
{ 217: } 278,
{ 218: } 279,
{ 219: } 281,
{ 220: } 283,
{ 221: } 285,
{ 222: } 286,
{ 223: } 287,
{ 224: } 289,
{ 225: } 291,
{ 226: } 293,
{ 227: } 294
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 2,
{ 2: } 4,
{ 3: } 6,
{ 4: } 8,
{ 5: } 10,
{ 6: } 12,
{ 7: } 14,
{ 8: } 16,
{ 9: } 18,
{ 10: } 20,
{ 11: } 22,
{ 12: } 24,
{ 13: } 26,
{ 14: } 28,
{ 15: } 30,
{ 16: } 32,
{ 17: } 34,
{ 18: } 36,
{ 19: } 38,
{ 20: } 39,
{ 21: } 40,
{ 22: } 42,
{ 23: } 44,
{ 24: } 46,
{ 25: } 48,
{ 26: } 50,
{ 27: } 52,
{ 28: } 54,
{ 29: } 57,
{ 30: } 58,
{ 31: } 59,
{ 32: } 60,
{ 33: } 62,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 73,
{ 45: } 74,
{ 46: } 75,
{ 47: } 76,
{ 48: } 77,
{ 49: } 78,
{ 50: } 79,
{ 51: } 80,
{ 52: } 81,
{ 53: } 82,
{ 54: } 83,
{ 55: } 84,
{ 56: } 85,
{ 57: } 86,
{ 58: } 87,
{ 59: } 88,
{ 60: } 89,
{ 61: } 90,
{ 62: } 92,
{ 63: } 93,
{ 64: } 94,
{ 65: } 95,
{ 66: } 96,
{ 67: } 97,
{ 68: } 98,
{ 69: } 99,
{ 70: } 99,
{ 71: } 100,
{ 72: } 101,
{ 73: } 102,
{ 74: } 103,
{ 75: } 105,
{ 76: } 105,
{ 77: } 106,
{ 78: } 107,
{ 79: } 107,
{ 80: } 108,
{ 81: } 109,
{ 82: } 110,
{ 83: } 111,
{ 84: } 112,
{ 85: } 113,
{ 86: } 114,
{ 87: } 116,
{ 88: } 117,
{ 89: } 118,
{ 90: } 119,
{ 91: } 120,
{ 92: } 121,
{ 93: } 122,
{ 94: } 123,
{ 95: } 124,
{ 96: } 125,
{ 97: } 126,
{ 98: } 127,
{ 99: } 128,
{ 100: } 129,
{ 101: } 130,
{ 102: } 132,
{ 103: } 133,
{ 104: } 134,
{ 105: } 135,
{ 106: } 136,
{ 107: } 137,
{ 108: } 138,
{ 109: } 140,
{ 110: } 141,
{ 111: } 142,
{ 112: } 143,
{ 113: } 144,
{ 114: } 145,
{ 115: } 145,
{ 116: } 146,
{ 117: } 147,
{ 118: } 148,
{ 119: } 149,
{ 120: } 149,
{ 121: } 150,
{ 122: } 152,
{ 123: } 153,
{ 124: } 155,
{ 125: } 157,
{ 126: } 159,
{ 127: } 161,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 170,
{ 135: } 172,
{ 136: } 174,
{ 137: } 176,
{ 138: } 177,
{ 139: } 178,
{ 140: } 179,
{ 141: } 181,
{ 142: } 182,
{ 143: } 183,
{ 144: } 184,
{ 145: } 185,
{ 146: } 186,
{ 147: } 187,
{ 148: } 189,
{ 149: } 191,
{ 150: } 192,
{ 151: } 193,
{ 152: } 194,
{ 153: } 196,
{ 154: } 197,
{ 155: } 197,
{ 156: } 199,
{ 157: } 200,
{ 158: } 201,
{ 159: } 202,
{ 160: } 203,
{ 161: } 204,
{ 162: } 205,
{ 163: } 206,
{ 164: } 207,
{ 165: } 209,
{ 166: } 211,
{ 167: } 213,
{ 168: } 215,
{ 169: } 217,
{ 170: } 218,
{ 171: } 220,
{ 172: } 221,
{ 173: } 222,
{ 174: } 225,
{ 175: } 226,
{ 176: } 227,
{ 177: } 228,
{ 178: } 229,
{ 179: } 231,
{ 180: } 233,
{ 181: } 234,
{ 182: } 234,
{ 183: } 235,
{ 184: } 236,
{ 185: } 238,
{ 186: } 240,
{ 187: } 241,
{ 188: } 242,
{ 189: } 244,
{ 190: } 246,
{ 191: } 247,
{ 192: } 249,
{ 193: } 251,
{ 194: } 252,
{ 195: } 253,
{ 196: } 254,
{ 197: } 255,
{ 198: } 256,
{ 199: } 257,
{ 200: } 257,
{ 201: } 259,
{ 202: } 260,
{ 203: } 261,
{ 204: } 262,
{ 205: } 263,
{ 206: } 264,
{ 207: } 265,
{ 208: } 266,
{ 209: } 267,
{ 210: } 268,
{ 211: } 270,
{ 212: } 271,
{ 213: } 273,
{ 214: } 275,
{ 215: } 276,
{ 216: } 277,
{ 217: } 278,
{ 218: } 280,
{ 219: } 282,
{ 220: } 284,
{ 221: } 285,
{ 222: } 286,
{ 223: } 288,
{ 224: } 290,
{ 225: } 292,
{ 226: } 293,
{ 227: } 295
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 34,
{ 2: } 67,
{ 3: } 67,
{ 4: } 71,
{ 5: } 75,
{ 6: } 77,
{ 7: } 81,
{ 8: } 83,
{ 9: } 85,
{ 10: } 87,
{ 11: } 92,
{ 12: } 95,
{ 13: } 100,
{ 14: } 104,
{ 15: } 107,
{ 16: } 109,
{ 17: } 112,
{ 18: } 113,
{ 19: } 114,
{ 20: } 114,
{ 21: } 115,
{ 22: } 116,
{ 23: } 118,
{ 24: } 120,
{ 25: } 122,
{ 26: } 122,
{ 27: } 123,
{ 28: } 123,
{ 29: } 124,
{ 30: } 126,
{ 31: } 128,
{ 32: } 128,
{ 33: } 130,
{ 34: } 130,
{ 35: } 130,
{ 36: } 133,
{ 37: } 136,
{ 38: } 138,
{ 39: } 139,
{ 40: } 141,
{ 41: } 145,
{ 42: } 147,
{ 43: } 149,
{ 44: } 151,
{ 45: } 153,
{ 46: } 155,
{ 47: } 157,
{ 48: } 159,
{ 49: } 161,
{ 50: } 163,
{ 51: } 165,
{ 52: } 167,
{ 53: } 169,
{ 54: } 171,
{ 55: } 173,
{ 56: } 175,
{ 57: } 177,
{ 58: } 179,
{ 59: } 181,
{ 60: } 183,
{ 61: } 185,
{ 62: } 188,
{ 63: } 189,
{ 64: } 191,
{ 65: } 193,
{ 66: } 195,
{ 67: } 197,
{ 68: } 197,
{ 69: } 197,
{ 70: } 197,
{ 71: } 198,
{ 72: } 200,
{ 73: } 203,
{ 74: } 205,
{ 75: } 205,
{ 76: } 207,
{ 77: } 209,
{ 78: } 209,
{ 79: } 210,
{ 80: } 212,
{ 81: } 214,
{ 82: } 216,
{ 83: } 218,
{ 84: } 220,
{ 85: } 222,
{ 86: } 224,
{ 87: } 226,
{ 88: } 227,
{ 89: } 229,
{ 90: } 231,
{ 91: } 233,
{ 92: } 237,
{ 93: } 239,
{ 94: } 241,
{ 95: } 243,
{ 96: } 245,
{ 97: } 247,
{ 98: } 249,
{ 99: } 251,
{ 100: } 253,
{ 101: } 255,
{ 102: } 257,
{ 103: } 258,
{ 104: } 260,
{ 105: } 262,
{ 106: } 264,
{ 107: } 266,
{ 108: } 268,
{ 109: } 270,
{ 110: } 271,
{ 111: } 273,
{ 112: } 275,
{ 113: } 277,
{ 114: } 279,
{ 115: } 281,
{ 116: } 282,
{ 117: } 284,
{ 118: } 286,
{ 119: } 288,
{ 120: } 290,
{ 121: } 293,
{ 122: } 295,
{ 123: } 297,
{ 124: } 299,
{ 125: } 300,
{ 126: } 301,
{ 127: } 302,
{ 128: } 303,
{ 129: } 304,
{ 130: } 306,
{ 131: } 308,
{ 132: } 310,
{ 133: } 312,
{ 134: } 314,
{ 135: } 315,
{ 136: } 316,
{ 137: } 317,
{ 138: } 318,
{ 139: } 320,
{ 140: } 322,
{ 141: } 324,
{ 142: } 325,
{ 143: } 327,
{ 144: } 329,
{ 145: } 331,
{ 146: } 333,
{ 147: } 335,
{ 148: } 337,
{ 149: } 338,
{ 150: } 339,
{ 151: } 341,
{ 152: } 343,
{ 153: } 345,
{ 154: } 346,
{ 155: } 348,
{ 156: } 349,
{ 157: } 350,
{ 158: } 352,
{ 159: } 354,
{ 160: } 356,
{ 161: } 356,
{ 162: } 358,
{ 163: } 360,
{ 164: } 362,
{ 165: } 364,
{ 166: } 365,
{ 167: } 366,
{ 168: } 367,
{ 169: } 368,
{ 170: } 369,
{ 171: } 371,
{ 172: } 373,
{ 173: } 375,
{ 174: } 377,
{ 175: } 379,
{ 176: } 381,
{ 177: } 383,
{ 178: } 385,
{ 179: } 387,
{ 180: } 388,
{ 181: } 389,
{ 182: } 391,
{ 183: } 392,
{ 184: } 394,
{ 185: } 396,
{ 186: } 397,
{ 187: } 398,
{ 188: } 400,
{ 189: } 402,
{ 190: } 403,
{ 191: } 404,
{ 192: } 406,
{ 193: } 407,
{ 194: } 408,
{ 195: } 410,
{ 196: } 412,
{ 197: } 414,
{ 198: } 416,
{ 199: } 418,
{ 200: } 420,
{ 201: } 421,
{ 202: } 422,
{ 203: } 424,
{ 204: } 426,
{ 205: } 428,
{ 206: } 430,
{ 207: } 432,
{ 208: } 434,
{ 209: } 436,
{ 210: } 438,
{ 211: } 440,
{ 212: } 441,
{ 213: } 441,
{ 214: } 442,
{ 215: } 443,
{ 216: } 445,
{ 217: } 447,
{ 218: } 449,
{ 219: } 450,
{ 220: } 451,
{ 221: } 452,
{ 222: } 454,
{ 223: } 456,
{ 224: } 457,
{ 225: } 458,
{ 226: } 459,
{ 227: } 461
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 33,
{ 1: } 66,
{ 2: } 66,
{ 3: } 70,
{ 4: } 74,
{ 5: } 76,
{ 6: } 80,
{ 7: } 82,
{ 8: } 84,
{ 9: } 86,
{ 10: } 91,
{ 11: } 94,
{ 12: } 99,
{ 13: } 103,
{ 14: } 106,
{ 15: } 108,
{ 16: } 111,
{ 17: } 112,
{ 18: } 113,
{ 19: } 113,
{ 20: } 114,
{ 21: } 115,
{ 22: } 117,
{ 23: } 119,
{ 24: } 121,
{ 25: } 121,
{ 26: } 122,
{ 27: } 122,
{ 28: } 123,
{ 29: } 125,
{ 30: } 127,
{ 31: } 127,
{ 32: } 129,
{ 33: } 129,
{ 34: } 129,
{ 35: } 132,
{ 36: } 135,
{ 37: } 137,
{ 38: } 138,
{ 39: } 140,
{ 40: } 144,
{ 41: } 146,
{ 42: } 148,
{ 43: } 150,
{ 44: } 152,
{ 45: } 154,
{ 46: } 156,
{ 47: } 158,
{ 48: } 160,
{ 49: } 162,
{ 50: } 164,
{ 51: } 166,
{ 52: } 168,
{ 53: } 170,
{ 54: } 172,
{ 55: } 174,
{ 56: } 176,
{ 57: } 178,
{ 58: } 180,
{ 59: } 182,
{ 60: } 184,
{ 61: } 187,
{ 62: } 188,
{ 63: } 190,
{ 64: } 192,
{ 65: } 194,
{ 66: } 196,
{ 67: } 196,
{ 68: } 196,
{ 69: } 196,
{ 70: } 197,
{ 71: } 199,
{ 72: } 202,
{ 73: } 204,
{ 74: } 204,
{ 75: } 206,
{ 76: } 208,
{ 77: } 208,
{ 78: } 209,
{ 79: } 211,
{ 80: } 213,
{ 81: } 215,
{ 82: } 217,
{ 83: } 219,
{ 84: } 221,
{ 85: } 223,
{ 86: } 225,
{ 87: } 226,
{ 88: } 228,
{ 89: } 230,
{ 90: } 232,
{ 91: } 236,
{ 92: } 238,
{ 93: } 240,
{ 94: } 242,
{ 95: } 244,
{ 96: } 246,
{ 97: } 248,
{ 98: } 250,
{ 99: } 252,
{ 100: } 254,
{ 101: } 256,
{ 102: } 257,
{ 103: } 259,
{ 104: } 261,
{ 105: } 263,
{ 106: } 265,
{ 107: } 267,
{ 108: } 269,
{ 109: } 270,
{ 110: } 272,
{ 111: } 274,
{ 112: } 276,
{ 113: } 278,
{ 114: } 280,
{ 115: } 281,
{ 116: } 283,
{ 117: } 285,
{ 118: } 287,
{ 119: } 289,
{ 120: } 292,
{ 121: } 294,
{ 122: } 296,
{ 123: } 298,
{ 124: } 299,
{ 125: } 300,
{ 126: } 301,
{ 127: } 302,
{ 128: } 303,
{ 129: } 305,
{ 130: } 307,
{ 131: } 309,
{ 132: } 311,
{ 133: } 313,
{ 134: } 314,
{ 135: } 315,
{ 136: } 316,
{ 137: } 317,
{ 138: } 319,
{ 139: } 321,
{ 140: } 323,
{ 141: } 324,
{ 142: } 326,
{ 143: } 328,
{ 144: } 330,
{ 145: } 332,
{ 146: } 334,
{ 147: } 336,
{ 148: } 337,
{ 149: } 338,
{ 150: } 340,
{ 151: } 342,
{ 152: } 344,
{ 153: } 345,
{ 154: } 347,
{ 155: } 348,
{ 156: } 349,
{ 157: } 351,
{ 158: } 353,
{ 159: } 355,
{ 160: } 355,
{ 161: } 357,
{ 162: } 359,
{ 163: } 361,
{ 164: } 363,
{ 165: } 364,
{ 166: } 365,
{ 167: } 366,
{ 168: } 367,
{ 169: } 368,
{ 170: } 370,
{ 171: } 372,
{ 172: } 374,
{ 173: } 376,
{ 174: } 378,
{ 175: } 380,
{ 176: } 382,
{ 177: } 384,
{ 178: } 386,
{ 179: } 387,
{ 180: } 388,
{ 181: } 390,
{ 182: } 391,
{ 183: } 393,
{ 184: } 395,
{ 185: } 396,
{ 186: } 397,
{ 187: } 399,
{ 188: } 401,
{ 189: } 402,
{ 190: } 403,
{ 191: } 405,
{ 192: } 406,
{ 193: } 407,
{ 194: } 409,
{ 195: } 411,
{ 196: } 413,
{ 197: } 415,
{ 198: } 417,
{ 199: } 419,
{ 200: } 420,
{ 201: } 421,
{ 202: } 423,
{ 203: } 425,
{ 204: } 427,
{ 205: } 429,
{ 206: } 431,
{ 207: } 433,
{ 208: } 435,
{ 209: } 437,
{ 210: } 439,
{ 211: } 440,
{ 212: } 440,
{ 213: } 441,
{ 214: } 442,
{ 215: } 444,
{ 216: } 446,
{ 217: } 448,
{ 218: } 449,
{ 219: } 450,
{ 220: } 451,
{ 221: } 453,
{ 222: } 455,
{ 223: } 456,
{ 224: } 457,
{ 225: } 458,
{ 226: } 460,
{ 227: } 461
);


var yyn : Integer;

label start, scan, action;

begin

start:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap then
    begin
      yyclear;
      return(0);
    end;

  if not yydone then goto start;

  Result := yyretval;

end(*yylex*);

