/*
				TUTORIAL 1.
				
		- label
		- goto
		- if
		- grammar rule

Now simulates a simple formal grammar with these rules:
	S -> S S
	S -> a
The generated language is:
	L(G) = { a^n | n > 1 }
*/

start S; // declare 'S' as start symbol. 
term a;  // declare 'a' as terminal symbol

// there must be exatly one main()
void main()
{	
f1:	// f1 is a label like in C
	f2, f3; // goto randomly f2 or f3.
	
	// S = S S represents the S -> S S rule.
	// the logical value of the "S = S S" expression is:
	//  = "this rule is executable on the current sentential form (CSF)"
	//  = "there is an S in the CSF"
	// So, the effect of this line:
	// If there is an S in the CSF, replace it to S S, then goto f1
f2:	if (S = S S) f1;

	else exit; // abort the program
	
	// If there is an S in the CSF, replace it to "a S", then goto f1.
	// Else exit
f3:	if (S = a) f1; else exit;
}