/* ----------------------------------------------
	Matrix grammar
	
A matrix grammar applies a sequence of rules instead
of one rule at once. Examples:
-------------------------------------------------*/

#pragma leftmost
start S;

// L(G) = {u u | u<{a, b, c}*}
void sample1()
{
	term a, b, c;
	nterm X, Y;
	[
		{ S = X Y; }
		{ X = a X; Y = a Y; }
		{ X = b X; Y = b Y; }
		{ X = c X; Y = c Y; }
		{ X = eps; Y = eps; }
	]
}

// L(G) = {a^(2^n) | n > 1}
// very slow
void sample2()
{
	term a;
	nterm A, U, Y, Z;
	// try = pontozott szabály
	[
		{ try A = U; try Y = U; S = Z Z; }
		{ try A = U; try S = U; Z = Y; }
		{ try A = U; try Z = U; Y = S; }
		{ try Z = U; try Y = U; S = A; }
		{ try Z = U; try Y = U; try S = U; A = a; }
	]
}

void main()
{
	sample1();
	//sample2();
}